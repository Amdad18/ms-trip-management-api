/*
 * This file is generated by jOOQ.
 */
package org.devp.trip.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.devp.trip.model.enums.TripsStatus;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Trips implements Serializable {

    private static final long serialVersionUID = 1L;

    private ULong         userId;
    private ULong         transporterId;
    private String        pickupLocation;
    private String        dropoffLocation;
    private String        othersInfo;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private TripsStatus   status;
    private String        pickupLatLng;
    private String        dropoffLatLng;
    private ULong         id;

    public Trips() {}

    public Trips(Trips value) {
        this.userId = value.userId;
        this.transporterId = value.transporterId;
        this.pickupLocation = value.pickupLocation;
        this.dropoffLocation = value.dropoffLocation;
        this.othersInfo = value.othersInfo;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.status = value.status;
        this.pickupLatLng = value.pickupLatLng;
        this.dropoffLatLng = value.dropoffLatLng;
        this.id = value.id;
    }

    public Trips(
        ULong         userId,
        ULong         transporterId,
        String        pickupLocation,
        String        dropoffLocation,
        String        othersInfo,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        TripsStatus   status,
        String        pickupLatLng,
        String        dropoffLatLng,
        ULong         id
    ) {
        this.userId = userId;
        this.transporterId = transporterId;
        this.pickupLocation = pickupLocation;
        this.dropoffLocation = dropoffLocation;
        this.othersInfo = othersInfo;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.status = status;
        this.pickupLatLng = pickupLatLng;
        this.dropoffLatLng = dropoffLatLng;
        this.id = id;
    }

    /**
     * Getter for <code>trip_management.trips.user_id</code>.
     */
    public ULong getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>trip_management.trips.user_id</code>.
     */
    public Trips setUserId(ULong userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.transporter_id</code>.
     */
    public ULong getTransporterId() {
        return this.transporterId;
    }

    /**
     * Setter for <code>trip_management.trips.transporter_id</code>.
     */
    public Trips setTransporterId(ULong transporterId) {
        this.transporterId = transporterId;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.pickup_location</code>.
     */
    public String getPickupLocation() {
        return this.pickupLocation;
    }

    /**
     * Setter for <code>trip_management.trips.pickup_location</code>.
     */
    public Trips setPickupLocation(String pickupLocation) {
        this.pickupLocation = pickupLocation;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.dropoff_location</code>.
     */
    public String getDropoffLocation() {
        return this.dropoffLocation;
    }

    /**
     * Setter for <code>trip_management.trips.dropoff_location</code>.
     */
    public Trips setDropoffLocation(String dropoffLocation) {
        this.dropoffLocation = dropoffLocation;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.others_info</code>.
     */
    public String getOthersInfo() {
        return this.othersInfo;
    }

    /**
     * Setter for <code>trip_management.trips.others_info</code>.
     */
    public Trips setOthersInfo(String othersInfo) {
        this.othersInfo = othersInfo;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>trip_management.trips.created_at</code>.
     */
    public Trips setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>trip_management.trips.updated_at</code>.
     */
    public Trips setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.status</code>.
     */
    public TripsStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>trip_management.trips.status</code>.
     */
    public Trips setStatus(TripsStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.pickup_lat_lng</code>.
     */
    public String getPickupLatLng() {
        return this.pickupLatLng;
    }

    /**
     * Setter for <code>trip_management.trips.pickup_lat_lng</code>.
     */
    public Trips setPickupLatLng(String pickupLatLng) {
        this.pickupLatLng = pickupLatLng;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.dropoff_lat_lng</code>.
     */
    public String getDropoffLatLng() {
        return this.dropoffLatLng;
    }

    /**
     * Setter for <code>trip_management.trips.dropoff_lat_lng</code>.
     */
    public Trips setDropoffLatLng(String dropoffLatLng) {
        this.dropoffLatLng = dropoffLatLng;
        return this;
    }

    /**
     * Getter for <code>trip_management.trips.id</code>.
     */
    public ULong getId() {
        return this.id;
    }

    /**
     * Setter for <code>trip_management.trips.id</code>.
     */
    public Trips setId(ULong id) {
        this.id = id;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Trips other = (Trips) obj;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (transporterId == null) {
            if (other.transporterId != null)
                return false;
        }
        else if (!transporterId.equals(other.transporterId))
            return false;
        if (pickupLocation == null) {
            if (other.pickupLocation != null)
                return false;
        }
        else if (!pickupLocation.equals(other.pickupLocation))
            return false;
        if (dropoffLocation == null) {
            if (other.dropoffLocation != null)
                return false;
        }
        else if (!dropoffLocation.equals(other.dropoffLocation))
            return false;
        if (othersInfo == null) {
            if (other.othersInfo != null)
                return false;
        }
        else if (!othersInfo.equals(other.othersInfo))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (pickupLatLng == null) {
            if (other.pickupLatLng != null)
                return false;
        }
        else if (!pickupLatLng.equals(other.pickupLatLng))
            return false;
        if (dropoffLatLng == null) {
            if (other.dropoffLatLng != null)
                return false;
        }
        else if (!dropoffLatLng.equals(other.dropoffLatLng))
            return false;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.transporterId == null) ? 0 : this.transporterId.hashCode());
        result = prime * result + ((this.pickupLocation == null) ? 0 : this.pickupLocation.hashCode());
        result = prime * result + ((this.dropoffLocation == null) ? 0 : this.dropoffLocation.hashCode());
        result = prime * result + ((this.othersInfo == null) ? 0 : this.othersInfo.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.pickupLatLng == null) ? 0 : this.pickupLatLng.hashCode());
        result = prime * result + ((this.dropoffLatLng == null) ? 0 : this.dropoffLatLng.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Trips (");

        sb.append(userId);
        sb.append(", ").append(transporterId);
        sb.append(", ").append(pickupLocation);
        sb.append(", ").append(dropoffLocation);
        sb.append(", ").append(othersInfo);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(status);
        sb.append(", ").append(pickupLatLng);
        sb.append(", ").append(dropoffLatLng);
        sb.append(", ").append(id);

        sb.append(")");
        return sb.toString();
    }
}
