/*
 * This file is generated by jOOQ.
 */
package org.devp.trip.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.LocalTime;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TripTraceInfos implements Serializable {

    private static final long serialVersionUID = 1L;

    private ULong         id;
    private ULong         userId;
    private String        location;
    private String        latlng;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private ULong         tripId;
    private LocalTime     traceTime;

    public TripTraceInfos() {}

    public TripTraceInfos(TripTraceInfos value) {
        this.id = value.id;
        this.userId = value.userId;
        this.location = value.location;
        this.latlng = value.latlng;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.tripId = value.tripId;
        this.traceTime = value.traceTime;
    }

    public TripTraceInfos(
        ULong         id,
        ULong         userId,
        String        location,
        String        latlng,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        ULong         tripId,
        LocalTime     traceTime
    ) {
        this.id = id;
        this.userId = userId;
        this.location = location;
        this.latlng = latlng;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.tripId = tripId;
        this.traceTime = traceTime;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.id</code>.
     */
    public ULong getId() {
        return this.id;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.id</code>.
     */
    public TripTraceInfos setId(ULong id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.user_id</code>.
     */
    public ULong getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.user_id</code>.
     */
    public TripTraceInfos setUserId(ULong userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.location</code>.
     */
    public String getLocation() {
        return this.location;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.location</code>.
     */
    public TripTraceInfos setLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.latlng</code>.
     */
    public String getLatlng() {
        return this.latlng;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.latlng</code>.
     */
    public TripTraceInfos setLatlng(String latlng) {
        this.latlng = latlng;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.created_at</code>.
     */
    public TripTraceInfos setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.updated_at</code>.
     */
    public TripTraceInfos setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.trip_id</code>.
     */
    public ULong getTripId() {
        return this.tripId;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.trip_id</code>.
     */
    public TripTraceInfos setTripId(ULong tripId) {
        this.tripId = tripId;
        return this;
    }

    /**
     * Getter for <code>trip_management.trip_trace_infos.trace_time</code>.
     */
    public LocalTime getTraceTime() {
        return this.traceTime;
    }

    /**
     * Setter for <code>trip_management.trip_trace_infos.trace_time</code>.
     */
    public TripTraceInfos setTraceTime(LocalTime traceTime) {
        this.traceTime = traceTime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TripTraceInfos other = (TripTraceInfos) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (location == null) {
            if (other.location != null)
                return false;
        }
        else if (!location.equals(other.location))
            return false;
        if (latlng == null) {
            if (other.latlng != null)
                return false;
        }
        else if (!latlng.equals(other.latlng))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        if (tripId == null) {
            if (other.tripId != null)
                return false;
        }
        else if (!tripId.equals(other.tripId))
            return false;
        if (traceTime == null) {
            if (other.traceTime != null)
                return false;
        }
        else if (!traceTime.equals(other.traceTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.location == null) ? 0 : this.location.hashCode());
        result = prime * result + ((this.latlng == null) ? 0 : this.latlng.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.tripId == null) ? 0 : this.tripId.hashCode());
        result = prime * result + ((this.traceTime == null) ? 0 : this.traceTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TripTraceInfos (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(location);
        sb.append(", ").append(latlng);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(tripId);
        sb.append(", ").append(traceTime);

        sb.append(")");
        return sb.toString();
    }
}
