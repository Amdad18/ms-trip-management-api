/*
 * This file is generated by jOOQ.
 */
package org.devp.trip.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private ULong         id;
    private String        userName;
    private String        fullName;
    private String        email;
    private String        address;
    private String        password;
    private String        phone;
    private String        profileImage;
    private String        url;
    private String        logo;
    private Byte          status;
    private String        apiKey;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.userName = value.userName;
        this.fullName = value.fullName;
        this.email = value.email;
        this.address = value.address;
        this.password = value.password;
        this.phone = value.phone;
        this.profileImage = value.profileImage;
        this.url = value.url;
        this.logo = value.logo;
        this.status = value.status;
        this.apiKey = value.apiKey;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Users(
        ULong         id,
        String        userName,
        String        fullName,
        String        email,
        String        address,
        String        password,
        String        phone,
        String        profileImage,
        String        url,
        String        logo,
        Byte          status,
        String        apiKey,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.id = id;
        this.userName = userName;
        this.fullName = fullName;
        this.email = email;
        this.address = address;
        this.password = password;
        this.phone = phone;
        this.profileImage = profileImage;
        this.url = url;
        this.logo = logo;
        this.status = status;
        this.apiKey = apiKey;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>trip_management.users.id</code>.
     */
    public ULong getId() {
        return this.id;
    }

    /**
     * Setter for <code>trip_management.users.id</code>.
     */
    public Users setId(ULong id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.user_name</code>.
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Setter for <code>trip_management.users.user_name</code>.
     */
    public Users setUserName(String userName) {
        this.userName = userName;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.full_name</code>.
     */
    public String getFullName() {
        return this.fullName;
    }

    /**
     * Setter for <code>trip_management.users.full_name</code>.
     */
    public Users setFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>trip_management.users.email</code>.
     */
    public Users setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>trip_management.users.address</code>.
     */
    public Users setAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>trip_management.users.password</code>.
     */
    public Users setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Setter for <code>trip_management.users.phone</code>.
     */
    public Users setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.profile_image</code>.
     */
    public String getProfileImage() {
        return this.profileImage;
    }

    /**
     * Setter for <code>trip_management.users.profile_image</code>.
     */
    public Users setProfileImage(String profileImage) {
        this.profileImage = profileImage;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.url</code>.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>trip_management.users.url</code>.
     */
    public Users setUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.logo</code>.
     */
    public String getLogo() {
        return this.logo;
    }

    /**
     * Setter for <code>trip_management.users.logo</code>.
     */
    public Users setLogo(String logo) {
        this.logo = logo;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.status</code>. 0 = PENDING, 1 = ACTIVE, 2 = INACTIVE, 3 = CANCEL_ACCOUNT, 4 = DELETE_ACCOUNT, 5 = ARCHIVE, 6 = REMOVED
     */
    public Byte getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>trip_management.users.status</code>. 0 = PENDING, 1 = ACTIVE, 2 = INACTIVE, 3 = CANCEL_ACCOUNT, 4 = DELETE_ACCOUNT, 5 = ARCHIVE, 6 = REMOVED
     */
    public Users setStatus(Byte status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.api_key</code>.
     */
    public String getApiKey() {
        return this.apiKey;
    }

    /**
     * Setter for <code>trip_management.users.api_key</code>.
     */
    public Users setApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>trip_management.users.created_at</code>.
     */
    public Users setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>trip_management.users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>trip_management.users.updated_at</code>.
     */
    public Users setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!userName.equals(other.userName))
            return false;
        if (fullName == null) {
            if (other.fullName != null)
                return false;
        }
        else if (!fullName.equals(other.fullName))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (address == null) {
            if (other.address != null)
                return false;
        }
        else if (!address.equals(other.address))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!phone.equals(other.phone))
            return false;
        if (profileImage == null) {
            if (other.profileImage != null)
                return false;
        }
        else if (!profileImage.equals(other.profileImage))
            return false;
        if (url == null) {
            if (other.url != null)
                return false;
        }
        else if (!url.equals(other.url))
            return false;
        if (logo == null) {
            if (other.logo != null)
                return false;
        }
        else if (!logo.equals(other.logo))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (apiKey == null) {
            if (other.apiKey != null)
                return false;
        }
        else if (!apiKey.equals(other.apiKey))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        result = prime * result + ((this.fullName == null) ? 0 : this.fullName.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.profileImage == null) ? 0 : this.profileImage.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.logo == null) ? 0 : this.logo.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.apiKey == null) ? 0 : this.apiKey.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(userName);
        sb.append(", ").append(fullName);
        sb.append(", ").append(email);
        sb.append(", ").append(address);
        sb.append(", ").append(password);
        sb.append(", ").append(phone);
        sb.append(", ").append(profileImage);
        sb.append(", ").append(url);
        sb.append(", ").append(logo);
        sb.append(", ").append(status);
        sb.append(", ").append(apiKey);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
